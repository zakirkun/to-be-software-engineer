version: '3.8'

services:
  backend_app:
    container_name: backend_app
    build:
      context: .
    ports:
      - "9000:9000"
    restart: unless-stopped
    links:
      - db
      - cache
    depends_on:
      db:
        condition: service_healthy
    networks:
    - infrastructure
  db:
    image: mysql:8.0.38
    container_name: db
    restart: always
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: toko_online
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      TZ: "Asia/Jakarta"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - "./:/docker-entrypoint-initdb.d"
    networks:
    - infrastructure
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3
      
  cache:
    image: redis:alpine
    container_name: cache
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - cache:/data
    networks:
      - infrastructure
      
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
      
volumes:
  mysql_data:
  cache:

networks:
  infrastructure:
    driver: bridge